PostgreSQL Manual:

Part I
PosgreSQL is an object-relational database management system.
PosgreSQL uses a client/server model:
	• Server manages the files and manages connections to clients. Program called `postgres`
	• Clients connect to server over TCP/IP, can be on different hosts

1.3 Creating a db
`createdb db_name`
	• This can be done in bash if postgresql was installed correctly
	• Also works if your user account has auth to make new db
To remove a db:
`dropdb db_name`

1.4 Accessing a db
To access the db:
	• Run psql in a terminal
	• Use a GUI like pgAdmin
	• Or make your own app
Examples will be with psql for now
To start a session:
`psql db_name`

I'm using a docker container for this:
```
docker run --name postgres -e POSTGRES_PASSWORD=somepassword -d postgres
docker exec -it --user postgres postgres /bin/bash
createdb test
psql test
```

Note that you must log in as a user to make a db, root does not work.
Postgres comes with a user names 'postgres', so log in to the container as postgres to make a db and use it in psql.

You can make SQL queries with SELECT once inside the db.
Note that psql has other commands than SQL ones, like \h for help, \q for quit.
Note that `exit` works to exit psql.

Chapter 2. The SQL Language
2.1 Introduction
You can call sql scripts with:
`\i script_name.sql`

2.2 Concepts
	• Relations are tables.
	• Each column in a table has a specified data type
	• Goups of tables are in databases, and collections of databases run by one PostgreSQL server instance is a database 'cluster'

2.3 Creating a new table
```
CREATE TABLE table_name(
	colName    type,
	colName    type,    -- note
);
```
	• Commands are ended with ;
	• Columns are made with a name and a type
	• Whitespace is not counted, so use as many tabs and newlines as desired
	• Comments are from after a '--' and a newline

Some data types:
type	data
varchar(80)	<=80 character strings
int	integer
real	floating point numbers
date	the date

You can even make your own data types!

Deleting a table is dropping it, just like a db:
`DROP TABLE name;`

2.4 Populating a Table with Rows
